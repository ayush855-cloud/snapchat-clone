{"version":3,"sources":["features/cameraSlice.js","firebase.js","features/appSlice.js","Preview.js","WebcamCapture.js","Chatone.js","Chats.js","ChatView.js","Login.js","App.js","app/store.js","index.js"],"names":["cameraSlice","createSlice","name","initialState","cameraImage","reducers","setCameraImage","state","action","payload","resetCameraImage","actions","selectCameraImage","camera","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","provider","GoogleAuthProvider","appSlice","user","selectedImage","login","logout","selectUser","app","Preview","history","useHistory","image","useSelector","dispatch","useDispatch","useEffect","replace","className","Close","onClick","TextFields","Create","Note","MusicNote","AttachFile","Crop","Timer","src","alt","Send","id","uuid","ref","putString","on","error","console","log","child","getDownloadURL","then","url","collection","add","imageUrl","username","read","profilePic","timestamp","FieldValue","serverTimestamp","videoConstraints","width","height","facingMode","WebcamCapture","webcamRef","useRef","capture","React","useCallback","imageSrc","current","getScreenshot","push","audio","screenshotFormat","fontSize","Chatone","doc","set","merge","Avatar","date","Date","toDate","toUTCString","StopRounded","Chats","useState","posts","setPosts","orderBy","onSnapshot","snapshot","docs","map","data","signOut","Search","placeholder","type","ChatBubble","ChatView","exit","isPlaying","duration","strokeWidth","size","colors","remainingTime","Login","Button","variant","signInWithPopup","result","displayName","photoURL","uid","catch","alert","messages","App","onAuthStateChanged","authUser","path","exact","configureStore","reducer","appReducer","cameraReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ec0d6469.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const cameraSlice = createSlice({\r\n  name: 'camera',\r\n  initialState: {\r\n    cameraImage: null,\r\n  },\r\n  reducers: {\r\n    setCameraImage: (state, action) => {\r\n      state.cameraImage = action.payload;\r\n    },\r\n\r\n    resetCameraImage: (state) =>{\r\n       state.cameraImage = null\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setCameraImage, resetCameraImage } = cameraSlice.actions;\r\n\r\nexport const selectCameraImage = state => state.camera.cameraImage;\r\n\r\nexport default cameraSlice.reducer;","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC2TY4r61QbqmPC2QAIuuX40x_evxijCX0\",\r\n    authDomain: \"snapchat-clone-a8d7c.firebaseapp.com\",\r\n    projectId: \"snapchat-clone-a8d7c\",\r\n    storageBucket: \"snapchat-clone-a8d7c.appspot.com\",\r\n    messagingSenderId: \"464161771184\",\r\n    appId: \"1:464161771184:web:772f68d7d4ae194a4d3575\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport { db, auth, storage, provider }","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    user: null,\r\n    selectedImage: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.user = null\r\n    },\r\n  },\r\n});  \r\n\r\nexport const { login, logout} = appSlice.actions;\r\n\r\n\r\nexport const selectUser = state => state.app.user;\r\n\r\n\r\nexport default appSlice.reducer;","import { Close } from '@material-ui/icons';\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AttachFile, Create, Crop, MusicNote, Note, Timer, TextFields,Send } from '@material-ui/icons';\r\nimport {resetCameraImage, selectCameraImage} from './features/cameraSlice';\r\nimport {v4 as uuid} from 'uuid';\r\nimport './Preview.css'\r\nimport firebase from 'firebase';\r\nimport { storage,db } from './firebase';\r\nimport { selectUser } from './features/appSlice';\r\n\r\nfunction Preview() {\r\n    const history=useHistory()\r\n    const image=useSelector(selectCameraImage);\r\n    const user=useSelector(selectUser);\r\n    const dispatch=useDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(!image){\r\n            history.replace(\"/\");\r\n        }\r\n    },[image,history])\r\n\r\n    const closePreview=()=>{\r\n        dispatch(resetCameraImage())\r\n    }\r\n\r\n    const sendPost = () => {\r\n        const id = uuid();\r\n        const uploadTask = storage.ref(`posts/${id}`).putString(image, \"data_url\");\r\n        uploadTask.on('state_changed', null, (error) => {\r\n          console.log(error)\r\n        }, () => {\r\n          storage.ref('posts').child(id).getDownloadURL().then((url) => {\r\n            db.collection('posts').add({\r\n              imageUrl: url,\r\n              username: user.username,\r\n              read: false,\r\n              profilePic: user.profilePic,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n            history.replace('/chats');\r\n          })\r\n        });\r\n      }\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n        <Close onClick={closePreview} className=\"preview_close\"/>\r\n        <div className=\"preview__toolbarRight\">\r\n        <TextFields />\r\n        <Create />\r\n        <Note />\r\n        <MusicNote />\r\n        <AttachFile />\r\n        <Crop />\r\n        <Timer />\r\n      </div>\r\n            <img src={image} className=\"captureImage\" alt=\"imag\"/>\r\n            <div className=\"preview__footer\">\r\n        <h2>Send now</h2>\r\n        <Send onClick={sendPost} className=\"preview__sendIcon\" />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","import React, { useRef } from 'react'\r\nimport Webcam from 'react-webcam';\r\nimport './WebcamCapture.css' \r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCameraImage } from './features/cameraSlice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst videoConstraints = {\r\n    width: 250,\r\n    height: 400,\r\n    facingMode: \"user\"\r\n};\r\n\r\nfunction WebcamCapture() {\r\n    const history = useHistory();\r\n    const webcamRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const capture = React.useCallback(\r\n        () => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            dispatch(setCameraImage(imageSrc));\r\n            history.push(\"/preview\");\r\n            //   console.log(imageSrc);\r\n\r\n        },\r\n        [webcamRef,dispatch,history]\r\n    );\r\n\r\n    return (\r\n        <div className=\"webcamCapture\">\r\n            <Webcam audio={false} height={videoConstraints.height} ref={webcamRef} screenshotFormat=\"image/jpeg\" width={videoConstraints.width} videoConstraints={videoConstraints} />\r\n            <RadioButtonUncheckedIcon className=\"webcamCapture_button\" onClick={capture} fontSize=\"large\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebcamCapture\r\n","import { Avatar } from '@material-ui/core';\r\nimport { StopRounded } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './Chatone.css';\r\nimport ReactTimeAgo from 'react-timeago';\r\nimport { setCameraImage } from './features/cameraSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { db } from './firebase';\r\n\r\nexport default function Chatone({ id, profilePic, username, timestamp, imageUrl, read }) {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  const open = () => {\r\n    if (!read) {\r\n      dispatch(setCameraImage(imageUrl));\r\n      db.collection('posts').doc(id).set({\r\n        read: true,\r\n      }, { merge: true })\r\n    }\r\n    history.push('/chats/view')\r\n  }\r\n\r\n//   useEffect(() => {\r\n//     const date = new Date(timestamp?.toDate()).toUTCString()\r\n//     setDate(date);\r\n//   }, [date])\r\n\r\n  return (\r\n    <div onClick={open} className=\"chat\">\r\n      <Avatar src={profilePic} className=\"chat_avatar\" />\r\n      <div className=\"chat__info\">\r\n        <h4>{username}</h4>\r\n        <p>{!read && 'Tap to view - '}{(<ReactTimeAgo date={new Date(timestamp?.toDate()).toUTCString()} />)}</p>\r\n      </div>\r\n\r\n      {!read && <StopRounded className=\"chat__readIcon\" />}\r\n    </div>\r\n  )\r\n}\r\n","import { Avatar } from '@material-ui/core';\r\nimport { ChatBubble, Search } from '@material-ui/icons';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"./Chats.css\";\r\nimport { auth, db } from './firebase';\r\nimport Chatone from './Chatone';\r\nimport { selectUser } from './features/appSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { resetCameraImage } from './features/cameraSlice';\r\n\r\nexport default function Chats() {\r\n  const [posts, setPosts] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n      setPosts(snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        data: doc.data(),\r\n      })))\r\n    })\r\n  }, [posts])\r\n\r\n  const takeSnap = ()=>{\r\n    dispatch(resetCameraImage())\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats__header\">\r\n        <Avatar className=\"chats__avatar\"\r\n          src={user.profilePic}\r\n          onClick={() => {\r\n            auth.signOut();\r\n          }}\r\n        />\r\n        <div className=\"chats__search\">\r\n          <Search className=\"chats__searchIcon\" />\r\n          <input placeholder=\"friends\" type=\"text\" />\r\n        </div>\r\n        <ChatBubble className=\"chats__chatIcon\" />\r\n      </div>\r\n      <div className=\"chat__posts\">\r\n        {posts.map(({ id, data: { profilePic, username, timestamp, imageUrl, read } }) => (\r\n          <Chatone\r\n            key={id}\r\n            id={id}\r\n            username={username}\r\n            timestamp={timestamp}\r\n            imageUrl={imageUrl}\r\n            read={read}\r\n            profilePic={profilePic}\r\n          />\r\n        ))}\r\n      </div>\r\n    \r\n      <RadioButtonUncheckedIcon\r\n        className=\"chats__takepicicon\"\r\n        onClick={takeSnap}\r\n        fontSize=\"large\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { selectCameraImage } from './features/cameraSlice';\r\nimport './ChatView.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\nexport default function ChatView() {\r\n  const selectedImage = useSelector(selectCameraImage);\r\n  const history = useHistory()\r\n  const exit = () => {\r\n    history.replace('/chats');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!selectedImage) {\r\n      exit();\r\n    }\r\n\r\n  }, [selectedImage])\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"chatView\">\r\n      <img src={selectedImage} onClick={exit} alt=\"\" />\r\n      <div className=\"chatView__timer\">\r\n        <CountdownCircleTimer\r\n          isPlaying\r\n          duration={10}\r\n          strokeWidth={10}\r\n          size={50}\r\n          colors={[\r\n            ['#004777', 0.33],\r\n            ['#F7B801', 0.33],\r\n            ['#A30000', 0.33]\r\n          ]}\r\n        >\r\n          {({ remainingTime }) => {\r\n            if (remainingTime === 0) {\r\n              exit();\r\n            }\r\n            return remainingTime;\r\n          }}\r\n        </CountdownCircleTimer>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './Login.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth, provider } from './firebase';\r\nimport { login } from './features/appSlice';\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider).then(result=>{\r\n      dispatch(login({\r\n        username: result.user.displayName,\r\n        profilePic: result.user.photoURL,\r\n        id: result.user.uid,\r\n      }))\r\n    }).catch(error=>{\r\n      alert(error.messages);\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img src='https://scx2.b-cdn.net/gfx/news/2017/1-snapchat.jpg' alt=\"\" />\r\n        <Button className=\"sign_in\" variant='outlined' onClick={signIn}>Sign in</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n \r\n} from \"react-router-dom\"\r\nimport Preview from './Preview';\r\nimport WebcamCapture from './WebcamCapture';\r\nimport './App.css';\r\nimport Chats from './Chats';\r\nimport ChatView from './ChatView';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, logout, selectUser } from './features/appSlice';\r\nimport Login from './Login';\r\nimport { auth } from './firebase';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        dispatch(login({\r\n          username: authUser.displayName,\r\n          profilePic: authUser.photoURL,\r\n          id: authUser.uid,\r\n        }))\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <img className=\"app__logo\" src='https://scx2.b-cdn.net/gfx/news/2017/1-snapchat.jpg' alt=\"\" />\r\n            <div className=\"app__body\">\r\n              <div className=\"body__background\">\r\n              <Switch>\r\n                <Route path=\"/chats/view\">\r\n                  <ChatView />\r\n                </Route>\r\n                <Route path=\"/chats\">\r\n                  <Chats />\r\n                </Route>\r\n                <Route path=\"/preview\">\r\n                  <Preview />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <WebcamCapture />\r\n                </Route>\r\n              </Switch>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n        }\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\nimport cameraReducer from '../features/cameraSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    camera: cameraReducer,\r\n  },\r\n});","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store.js';\r\nimport { Provider } from 'react-redux';\r\n\r\n// import TimeAgo from 'javascript-time-ago'\r\n\r\n// import en from 'javascript-time-ago/locale/en'\r\n// import ru from 'javascript-time-ago/locale/ru'\r\n\r\n// TimeAgo.addDefaultLocale(en)\r\n// TimeAgo.addLocale(ru)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}